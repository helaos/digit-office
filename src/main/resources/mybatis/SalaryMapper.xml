<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fatehole.office.mapper.SalaryMapper" >
  <resultMap id="BaseResultMap" type="com.fatehole.office.model.Salary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="basic_salary" property="basicSalary" jdbcType="INTEGER" />
    <result column="bonus" property="bonus" jdbcType="INTEGER" />
    <result column="lunch_salary" property="lunchSalary" jdbcType="INTEGER" />
    <result column="traffic_salary" property="trafficSalary" jdbcType="INTEGER" />
    <result column="all_salary" property="allSalary" jdbcType="INTEGER" />
    <result column="pension_base" property="pensionBase" jdbcType="INTEGER" />
    <result column="pension_ratio" property="pensionRatio" jdbcType="REAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="medical_base" property="medicalBase" jdbcType="INTEGER" />
    <result column="medical_ratio" property="medicalRatio" jdbcType="REAL" />
    <result column="provident_fund_base" property="providentFundBase" jdbcType="INTEGER" />
    <result column="provident_fund_ratio" property="providentFundRatio" jdbcType="REAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, basic_salary, bonus, lunch_salary, traffic_salary, all_salary, pension_base, 
    pension_ratio, create_date, medical_base, medical_ratio, provident_fund_base, provident_fund_ratio
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from salary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from salary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fatehole.office.model.Salary" >
    insert into salary (id, name, basic_salary, 
      bonus, lunch_salary, traffic_salary, 
      all_salary, pension_base, pension_ratio, 
      create_date, medical_base, medical_ratio, 
      provident_fund_base, provident_fund_ratio)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{basicSalary,jdbcType=INTEGER}, 
      #{bonus,jdbcType=INTEGER}, #{lunchSalary,jdbcType=INTEGER}, #{trafficSalary,jdbcType=INTEGER}, 
      #{allSalary,jdbcType=INTEGER}, #{pensionBase,jdbcType=INTEGER}, #{pensionRatio,jdbcType=REAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{medicalBase,jdbcType=INTEGER}, #{medicalRatio,jdbcType=REAL}, 
      #{providentFundBase,jdbcType=INTEGER}, #{providentFundRatio,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.fatehole.office.model.Salary" >
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="basicSalary != null" >
        basic_salary,
      </if>
      <if test="bonus != null" >
        bonus,
      </if>
      <if test="lunchSalary != null" >
        lunch_salary,
      </if>
      <if test="trafficSalary != null" >
        traffic_salary,
      </if>
      <if test="allSalary != null" >
        all_salary,
      </if>
      <if test="pensionBase != null" >
        pension_base,
      </if>
      <if test="pensionRatio != null" >
        pension_ratio,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="medicalBase != null" >
        medical_base,
      </if>
      <if test="medicalRatio != null" >
        medical_ratio,
      </if>
      <if test="providentFundBase != null" >
        provident_fund_base,
      </if>
      <if test="providentFundRatio != null" >
        provident_fund_ratio,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="basicSalary != null" >
        #{basicSalary,jdbcType=INTEGER},
      </if>
      <if test="bonus != null" >
        #{bonus,jdbcType=INTEGER},
      </if>
      <if test="lunchSalary != null" >
        #{lunchSalary,jdbcType=INTEGER},
      </if>
      <if test="trafficSalary != null" >
        #{trafficSalary,jdbcType=INTEGER},
      </if>
      <if test="allSalary != null" >
        #{allSalary,jdbcType=INTEGER},
      </if>
      <if test="pensionBase != null" >
        #{pensionBase,jdbcType=INTEGER},
      </if>
      <if test="pensionRatio != null" >
        #{pensionRatio,jdbcType=REAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="medicalBase != null" >
        #{medicalBase,jdbcType=INTEGER},
      </if>
      <if test="medicalRatio != null" >
        #{medicalRatio,jdbcType=REAL},
      </if>
      <if test="providentFundBase != null" >
        #{providentFundBase,jdbcType=INTEGER},
      </if>
      <if test="providentFundRatio != null" >
        #{providentFundRatio,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fatehole.office.model.Salary" >
    update salary
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="basicSalary != null" >
        basic_salary = #{basicSalary,jdbcType=INTEGER},
      </if>
      <if test="bonus != null" >
        bonus = #{bonus,jdbcType=INTEGER},
      </if>
      <if test="lunchSalary != null" >
        lunch_salary = #{lunchSalary,jdbcType=INTEGER},
      </if>
      <if test="trafficSalary != null" >
        traffic_salary = #{trafficSalary,jdbcType=INTEGER},
      </if>
      <if test="allSalary != null" >
        all_salary = #{allSalary,jdbcType=INTEGER},
      </if>
      <if test="pensionBase != null" >
        pension_base = #{pensionBase,jdbcType=INTEGER},
      </if>
      <if test="pensionRatio != null" >
        pension_ratio = #{pensionRatio,jdbcType=REAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="medicalBase != null" >
        medical_base = #{medicalBase,jdbcType=INTEGER},
      </if>
      <if test="medicalRatio != null" >
        medical_ratio = #{medicalRatio,jdbcType=REAL},
      </if>
      <if test="providentFundBase != null" >
        provident_fund_base = #{providentFundBase,jdbcType=INTEGER},
      </if>
      <if test="providentFundRatio != null" >
        provident_fund_ratio = #{providentFundRatio,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fatehole.office.model.Salary" >
    update salary
    set name = #{name,jdbcType=VARCHAR},
      basic_salary = #{basicSalary,jdbcType=INTEGER},
      bonus = #{bonus,jdbcType=INTEGER},
      lunch_salary = #{lunchSalary,jdbcType=INTEGER},
      traffic_salary = #{trafficSalary,jdbcType=INTEGER},
      all_salary = #{allSalary,jdbcType=INTEGER},
      pension_base = #{pensionBase,jdbcType=INTEGER},
      pension_ratio = #{pensionRatio,jdbcType=REAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      medical_base = #{medicalBase,jdbcType=INTEGER},
      medical_ratio = #{medicalRatio,jdbcType=REAL},
      provident_fund_base = #{providentFundBase,jdbcType=INTEGER},
      provident_fund_ratio = #{providentFundRatio,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>